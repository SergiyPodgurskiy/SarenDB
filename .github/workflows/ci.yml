name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  backend:
    name: Backend Build & Migrations
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql+asyncpg://user:password@localhost:5432/sarendb

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: sarendb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d sarendb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install Backend Dependencies
        working-directory: backend
        run: |
          poetry install --no-root --no-interaction

      - name: Run Alembic Migrations
        working-directory: backend
        run: |
          poetry run alembic upgrade head

      - name: Smoke Test Import
        working-directory: backend
        run: |
          poetry run python -c "import app; print('Import OK')"

  frontend:
    name: Frontend Lint & Build
    needs: backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint with ESLint
        working-directory: frontend
        run: npx eslint "src/**/*.{ts,tsx}"

      - name: Format Check with Prettier
        working-directory: frontend
        run: npx prettier --check "src/**/*.{ts,tsx,css,json,md}"

      - name: Build Frontend
        working-directory: frontend
        run: npm run build
